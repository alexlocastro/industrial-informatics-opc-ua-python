# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.14.1
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_mainWindow(object):
    def setupUi(self, mainWindow):
        mainWindow.setObjectName("mainWindow")
        mainWindow.resize(962, 485)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(mainWindow.sizePolicy().hasHeightForWidth())
        mainWindow.setSizePolicy(sizePolicy)
        mainWindow.setStyleSheet("\n"
"background-color: white;\n"
"")
        self.centralwidget = QtWidgets.QWidget(mainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.addressComboBox = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.addressComboBox.sizePolicy().hasHeightForWidth())
        self.addressComboBox.setSizePolicy(sizePolicy)
        self.addressComboBox.setStyleSheet("border: 2px solid black;")
        self.addressComboBox.setEditable(True)
        self.addressComboBox.setObjectName("addressComboBox")
        self.gridLayout.addWidget(self.addressComboBox, 2, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Ubuntu Mono")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 5, 1, 1, 2)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Ubuntu Mono")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 5, 0, 1, 1)
        self.treeView = QtWidgets.QTreeView(self.centralwidget)
        self.treeView.setStyleSheet("border: 2px solid black;\n"
"")
        self.treeView.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.treeView.setObjectName("treeView")
        self.gridLayout.addWidget(self.treeView, 6, 0, 6, 1)
        self.attrView = QtWidgets.QTreeView(self.centralwidget)
        self.attrView.setEnabled(True)
        self.attrView.setStyleSheet("border: 2px solid black;\n"
"")
        self.attrView.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.attrView.setObjectName("attrView")
        self.gridLayout.addWidget(self.attrView, 6, 1, 6, 2)
        mainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(mainWindow)
        self.statusbar.setObjectName("statusbar")
        mainWindow.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(mainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 962, 26))
        self.menuBar.setObjectName("menuBar")
        self.menuSubscription = QtWidgets.QMenu(self.menuBar)
        self.menuSubscription.setObjectName("menuSubscription")
        self.menuReadWrite = QtWidgets.QMenu(self.menuBar)
        self.menuReadWrite.setObjectName("menuReadWrite")
        self.menuWindows = QtWidgets.QMenu(self.menuBar)
        self.menuWindows.setObjectName("menuWindows")
        self.menuConnection = QtWidgets.QMenu(self.menuBar)
        self.menuConnection.setObjectName("menuConnection")
        mainWindow.setMenuBar(self.menuBar)
        self.actionRead = QtWidgets.QAction(mainWindow)
        self.actionRead.setObjectName("actionRead")
        self.actionWrite = QtWidgets.QAction(mainWindow)
        self.actionWrite.setObjectName("actionWrite")
        self.actionCreate_subscription = QtWidgets.QAction(mainWindow)
        self.actionCreate_subscription.setObjectName("actionCreate_subscription")
        self.actionDelete_subscription = QtWidgets.QAction(mainWindow)
        self.actionDelete_subscription.setObjectName("actionDelete_subscription")
        self.actionCreate_monitored_item = QtWidgets.QAction(mainWindow)
        self.actionCreate_monitored_item.setObjectName("actionCreate_monitored_item")
        self.actionDelete_monitered_item = QtWidgets.QAction(mainWindow)
        self.actionDelete_monitered_item.setObjectName("actionDelete_monitered_item")
        self.actionReferences = QtWidgets.QAction(mainWindow)
        self.actionReferences.setObjectName("actionReferences")
        self.actionSubscriptions = QtWidgets.QAction(mainWindow)
        self.actionSubscriptions.setObjectName("actionSubscriptions")
        self.actionLogs = QtWidgets.QAction(mainWindow)
        self.actionLogs.setObjectName("actionLogs")
        self.actionConnection_settings = QtWidgets.QAction(mainWindow)
        self.actionConnection_settings.setObjectName("actionConnection_settings")
        self.actionConnect = QtWidgets.QAction(mainWindow)
        self.actionConnect.setObjectName("actionConnect")
        self.actionDisconnect = QtWidgets.QAction(mainWindow)
        self.actionDisconnect.setObjectName("actionDisconnect")
        self.actionQuery_endpoints = QtWidgets.QAction(mainWindow)
        self.actionQuery_endpoints.setObjectName("actionQuery_endpoints")
        self.menuSubscription.addAction(self.actionCreate_subscription)
        self.menuSubscription.addAction(self.actionDelete_subscription)
        self.menuSubscription.addAction(self.actionCreate_monitored_item)
        self.menuSubscription.addAction(self.actionDelete_monitered_item)
        self.menuReadWrite.addAction(self.actionRead)
        self.menuReadWrite.addAction(self.actionWrite)
        self.menuWindows.addAction(self.actionReferences)
        self.menuWindows.addAction(self.actionSubscriptions)
        self.menuWindows.addAction(self.actionLogs)
        self.menuConnection.addAction(self.actionConnection_settings)
        self.menuConnection.addAction(self.actionConnect)
        self.menuConnection.addAction(self.actionDisconnect)
        self.menuConnection.addAction(self.actionQuery_endpoints)
        self.menuBar.addAction(self.menuConnection.menuAction())
        self.menuBar.addAction(self.menuReadWrite.menuAction())
        self.menuBar.addAction(self.menuSubscription.menuAction())
        self.menuBar.addAction(self.menuWindows.menuAction())

        self.retranslateUi(mainWindow)
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "OPC UA Client"))
        self.label_3.setText(_translate("mainWindow", "Details"))
        self.label_4.setText(_translate("mainWindow", "Browse"))
        self.menuSubscription.setTitle(_translate("mainWindow", "Subscription"))
        self.menuReadWrite.setTitle(_translate("mainWindow", "ReadWrite"))
        self.menuWindows.setTitle(_translate("mainWindow", "Windows"))
        self.menuConnection.setTitle(_translate("mainWindow", "Connection"))
        self.actionRead.setText(_translate("mainWindow", "Read"))
        self.actionWrite.setText(_translate("mainWindow", "Write"))
        self.actionCreate_subscription.setText(_translate("mainWindow", "Create subscription"))
        self.actionDelete_subscription.setText(_translate("mainWindow", "Delete subscription"))
        self.actionCreate_monitored_item.setText(_translate("mainWindow", "Create monitored item"))
        self.actionDelete_monitered_item.setText(_translate("mainWindow", "Delete monitered item"))
        self.actionReferences.setText(_translate("mainWindow", "References"))
        self.actionSubscriptions.setText(_translate("mainWindow", "Subscriptions"))
        self.actionLogs.setText(_translate("mainWindow", "Logs"))
        self.actionConnection_settings.setText(_translate("mainWindow", "Connection settings"))
        self.actionConnect.setText(_translate("mainWindow", "Connect"))
        self.actionDisconnect.setText(_translate("mainWindow", "Disconnect"))
        self.actionQuery_endpoints.setText(_translate("mainWindow", "Query endpoints"))
